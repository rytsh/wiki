import{_ as n,o as a,c as l,ag as p}from"./chunks/framework.BcBuEkoe.js";const i=JSON.parse('{"title":"gRPC","description":"","frontmatter":{},"headers":[],"relativePath":"development/go/grpc.md","filePath":"development/go/grpc.md","lastUpdated":1747815796000}'),o={name:"development/go/grpc.md"};function e(t,s,F,c,r,y){return a(),l("div",null,s[0]||(s[0]=[p(`<h1 id="grpc" tabindex="-1">gRPC <a class="header-anchor" href="#grpc" aria-label="Permalink to &quot;gRPC&quot;">​</a></h1><p>In golang I really like to use gRPC with connectRPC. It looks like gRPC with fixed and completed version.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># proto-go</span></span>
<span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> google.golang.org/protobuf/cmd/protoc-gen-go@v1.36.6</span><span style="color:#546E7A;font-style:italic;"> # https://pkg.go.dev/google.golang.org/protobuf/cmd/protoc-gen-go</span></span>
<span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.5.1</span><span style="color:#546E7A;font-style:italic;"> # https://pkg.go.dev/google.golang.org/grpc/cmd/protoc-gen-go-grpc</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;"># connect-rpc</span></span>
<span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> github.com/bufbuild/buf/cmd/buf@v1.53.0</span><span style="color:#546E7A;font-style:italic;"> # https://pkg.go.dev/github.com/bufbuild/buf/cmd/buf</span></span>
<span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> connectrpc.com/connect/cmd/protoc-gen-connect-go@v1.18.1</span><span style="color:#546E7A;font-style:italic;"> # https://pkg.go.dev/connectrpc.com/connect/cmd/protoc-gen-connect-go</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;"># proto-es for generate JS code</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#C3E88D;"> add</span><span style="color:#C3E88D;"> -g</span><span style="color:#C3E88D;"> @connectrpc/protoc-gen-connect-es</span><span style="color:#C3E88D;"> @bufbuild/protoc-gen-es</span></span></code></pre></div><p>Tools</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> github.com/fullstorydev/grpcurl/cmd/grpcurl@v1.9.3</span><span style="color:#546E7A;font-style:italic;"> # https://pkg.go.dev/github.com/fullstorydev/grpcurl/cmd/grpcurl</span></span></code></pre></div><p>For generating buf codes create a folder I called <code>protobuf</code> in the root of the project.</p><p>Add <code>buf.yaml</code> file</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> v1</span></span>
<span class="line"><span style="color:#F07178;">breaking</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  use</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#C3E88D;"> FILE</span></span>
<span class="line"><span style="color:#F07178;">lint</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  use</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#C3E88D;"> DEFAULT</span></span></code></pre></div><p>Add <code>buf.gen.yaml</code> file</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> v1</span></span>
<span class="line"><span style="color:#F07178;">managed</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  enabled</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#F07178;">  go_package_prefix</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    default</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> github.com/yourusername/yourproject/protobuf/gen</span></span>
<span class="line"><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> plugin</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> go</span></span>
<span class="line"><span style="color:#F07178;">    out</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> gen</span></span>
<span class="line"><span style="color:#F07178;">    opt</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> paths=source_relative</span></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> plugin</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> connect-go</span></span>
<span class="line"><span style="color:#F07178;">    out</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> gen</span></span>
<span class="line"><span style="color:#F07178;">    opt</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> paths=source_relative</span></span></code></pre></div><p>Now create a proto file.</p><p>Create file like test/v1/hello.proto</p><div class="language-proto"><button title="Copy Code" class="copy"></button><span class="lang">proto</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">syntax</span><span style="color:#89DDFF;"> =</span><span style="color:#C3E88D;"> &quot;proto3&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">package</span><span style="color:#C3E88D;"> test.v1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#FFCB6B;"> GetRecordRequest</span><span style="color:#EEFFFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    int64</span><span style="color:#EEFFFF;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#EEFFFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">message</span><span style="color:#FFCB6B;"> GetRecordResponse</span><span style="color:#EEFFFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    int64</span><span style="color:#EEFFFF;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">    bytes</span><span style="color:#EEFFFF;"> record_details </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">    optional</span><span style="color:#C792EA;"> string</span><span style="color:#EEFFFF;"> date_reg </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#EEFFFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">service</span><span style="color:#FFCB6B;"> MyService</span><span style="color:#EEFFFF;"> {</span></span>
<span class="line"><span style="color:#F78C6C;">    rpc</span><span style="color:#82AAFF;"> GetRecord</span><span style="color:#EEFFFF;"> (</span><span style="color:#FFCB6B;">GetRecordRequest</span><span style="color:#EEFFFF;">) </span><span style="color:#F78C6C;">returns</span><span style="color:#EEFFFF;"> (</span><span style="color:#FFCB6B;">GetRecordResponse</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#EEFFFF;">}</span></span></code></pre></div><p>Now generate buf code</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">buf</span><span style="color:#C3E88D;"> generate</span><span style="color:#C3E88D;"> --path</span><span style="color:#C3E88D;"> test/v1</span><span style="color:#C3E88D;"> --clean</span></span></code></pre></div><h2 id="server" tabindex="-1">Server <a class="header-anchor" href="#server" aria-label="Permalink to &quot;Server&quot;">​</a></h2><p>For creating server you need to create with http2 server.</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;">//	&quot;connectrpc.com/grpchealth&quot;</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">//	&quot;connectrpc.com/grpcreflect&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#EEFFFF;">mux </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> http</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewServeMux</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">// add handler to mux</span></span>
<span class="line"><span style="color:#EEFFFF;">mux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">HandleFunc</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/test/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> e</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">ServeHTTP</span><span style="color:#89DDFF;">)</span><span style="color:#546E7A;font-style:italic;"> // to add http handler</span></span>
<span class="line"><span style="color:#EEFFFF;">mux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Handle</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">handleGRPC</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Handler</span><span style="color:#89DDFF;">())</span><span style="color:#546E7A;font-style:italic;"> // to add gRPC handler</span></span>
<span class="line"></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">// add gRPC health check</span></span>
<span class="line"><span style="color:#EEFFFF;">healthChecker </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> grpchealth</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewStaticChecker</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">handleGRPC</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ServiceName</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#EEFFFF;">mux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Handle</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">grpchealth</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewHandler</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">healthChecker</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">// add gRPC reflection</span></span>
<span class="line"><span style="color:#EEFFFF;">reflector </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> grpcreflect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewStaticReflector</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">handleGRPC</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ServiceName</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#EEFFFF;">mux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Handle</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">grpcreflect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewHandlerV1</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">reflector</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#EEFFFF;">mux</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Handle</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">grpcreflect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewHandlerV1Alpha</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">reflector</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">//</span><span style="color:#546E7A;font-style:italic;"> //////////////////////////////////</span></span>
<span class="line"></span>
<span class="line"><span style="color:#EEFFFF;">s</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">server </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &amp;</span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Server</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#EEFFFF;">    Addr</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;">    addr</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#EEFFFF;">    Handler</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> h2c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewHandler</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">s</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">mux</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &amp;</span><span style="color:#FFCB6B;">http2</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Server</span><span style="color:#89DDFF;">{}),</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#EEFFFF;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Info</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">Msgf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">starting server on port </span><span style="color:#F07178;">%s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> addr</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ListenAndServe</span><span style="color:#89DDFF;">();</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#89DDFF;"> nil</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#EEFFFF;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Errorf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">failed to start server: </span><span style="color:#F07178;">%w</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> err</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="client" tabindex="-1">Client <a class="header-anchor" href="#client" aria-label="Permalink to &quot;Client&quot;">​</a></h2><p>For client side best to use only http client with http2 transporter.</p><p>Check <a href="https://github.com/worldline-go/klient" target="_blank" rel="noreferrer">klient library</a> to easy to create http client.</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;">// &quot;github.com/worldline-go/grpc/health&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#FFCB6B;"> Client</span><span style="color:#89DDFF;"> struct</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#EEFFFF;">	testClient </span><span style="color:#FFCB6B;">testv1connect</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">TestServiceClient</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#82AAFF;"> New</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">ctx</span><span style="color:#FFCB6B;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;font-style:italic;"> opts</span><span style="color:#89DDFF;"> ...</span><span style="color:#FFCB6B;">klient</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">OptionClientFn</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> (*</span><span style="color:#FFCB6B;">Client</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;"> error</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#EEFFFF;">	k</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> klient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">New</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">klient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">OptionsPre</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">opts</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> klient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithHTTP2</span><span style="color:#89DDFF;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">))...)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">	if</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#89DDFF;"> nil</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">		return</span><span style="color:#89DDFF;"> nil,</span><span style="color:#EEFFFF;"> err </span><span style="color:#546E7A;font-style:italic;">//nolint:wrapcheck</span><span style="color:#546E7A;font-style:italic;"> // no need to wrap</span></span>
<span class="line"><span style="color:#89DDFF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#EEFFFF;">	otelInterceptor</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> otelconnect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewInterceptor</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">otelconnect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithoutMetrics</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">	if</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#89DDFF;"> nil</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">		return</span><span style="color:#89DDFF;"> nil,</span><span style="color:#EEFFFF;"> err </span><span style="color:#546E7A;font-style:italic;">//nolint:wrapcheck</span><span style="color:#546E7A;font-style:italic;"> // no need to wrap</span></span>
<span class="line"><span style="color:#89DDFF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">	// health check</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">	if</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> health</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Check</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> k</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">HTTP</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> testv1connect</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">TestServiceName</span><span style="color:#89DDFF;">);</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#89DDFF;"> nil</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">		return</span><span style="color:#89DDFF;"> nil,</span><span style="color:#EEFFFF;"> err </span><span style="color:#546E7A;font-style:italic;">//nolint:wrapcheck</span><span style="color:#546E7A;font-style:italic;"> // no need to wrap</span></span>
<span class="line"><span style="color:#89DDFF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#EEFFFF;">	testClient </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> testv1connect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NewTestServiceClient</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">k</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">HTTP</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> connect</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WithInterceptors</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">otelInterceptor</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">	return</span><span style="color:#89DDFF;"> &amp;</span><span style="color:#FFCB6B;">Client</span><span style="color:#89DDFF;">{</span><span style="color:#EEFFFF;">testClient</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> testClient</span><span style="color:#89DDFF;">},</span><span style="color:#89DDFF;"> nil</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">// GetRecord returns the record with the given id.</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">//   - If the record is not found, it returns nil.</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#89DDFF;"> (</span><span style="color:#EEFFFF;font-style:italic;">c </span><span style="color:#89DDFF;">*</span><span style="color:#FFCB6B;">Client</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;"> GetRecord</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;font-style:italic;">ctx</span><span style="color:#FFCB6B;"> context</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Context</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;font-style:italic;"> id</span><span style="color:#C792EA;"> int64</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> (*</span><span style="color:#FFCB6B;">Record</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;"> error</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#EEFFFF;">	record</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#EEFFFF;"> c</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">testClient</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetRecord</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &amp;</span><span style="color:#FFCB6B;">connect</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Request</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">v1</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GetRecordRequest</span><span style="color:#89DDFF;">]{</span></span>
<span class="line"><span style="color:#EEFFFF;">		Msg</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &amp;</span><span style="color:#FFCB6B;">v1</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">GetRecordRequest</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#EEFFFF;">			ID</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> id</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#EEFFFF;">			FileId</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;">   fileID</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">		},</span></span>
<span class="line"><span style="color:#89DDFF;">	})</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">	if</span><span style="color:#EEFFFF;"> err </span><span style="color:#89DDFF;">!=</span><span style="color:#89DDFF;"> nil</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">		if</span><span style="color:#EEFFFF;"> connectErr </span><span style="color:#89DDFF;">:=</span><span style="color:#82AAFF;"> new</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">connect</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Error</span><span style="color:#89DDFF;">);</span><span style="color:#EEFFFF;"> errors</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">As</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">err</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &amp;</span><span style="color:#EEFFFF;">connectErr</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">			if</span><span style="color:#EEFFFF;"> connectErr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Code</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> ==</span><span style="color:#EEFFFF;"> connect</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">CodeNotFound </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">				return</span><span style="color:#89DDFF;"> nil,</span><span style="color:#EEFFFF;"> ErrNotFound</span></span>
<span class="line"><span style="color:#89DDFF;">			}</span></span>
<span class="line"><span style="color:#89DDFF;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">		return</span><span style="color:#89DDFF;"> nil,</span><span style="color:#EEFFFF;"> err </span><span style="color:#546E7A;font-style:italic;">//nolint:wrapcheck</span><span style="color:#546E7A;font-style:italic;"> // no need to wrap</span></span>
<span class="line"><span style="color:#89DDFF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">	return</span><span style="color:#82AAFF;"> transformRecord</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">record</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,22)]))}const E=n(o,[["render",e]]);export{i as __pageData,E as default};
