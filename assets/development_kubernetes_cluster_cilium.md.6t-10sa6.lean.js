import{_ as a,c as n,a2 as l,o as e}from"./chunks/framework.BQmytedh.js";const u=JSON.parse('{"title":"Cilium","description":"","frontmatter":{},"headers":[],"relativePath":"development/kubernetes/cluster/cilium.md","filePath":"development/kubernetes/cluster/cilium.md","lastUpdated":1735567375000}'),p={name:"development/kubernetes/cluster/cilium.md"};function o(t,s,c,r,i,y){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="cilium" tabindex="-1">Cilium <a class="header-anchor" href="#cilium" aria-label="Permalink to &quot;Cilium&quot;">​</a></h1><p>Cilum is general networking solution makes load balancer, firewall, etc.</p><p>CLI installation</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#C3E88D;"> -fSLO</span><span style="color:#C3E88D;"> https://github.com/cilium/cilium-cli/releases/download/v0.16.22/cilium-linux-amd64.tar.gz</span></span>
<span class="line"><span style="color:#FFCB6B;">tar</span><span style="color:#C3E88D;"> xzf</span><span style="color:#C3E88D;"> cilium-linux-amd64.tar.gz</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> mv</span><span style="color:#C3E88D;"> cilium</span><span style="color:#C3E88D;"> /usr/local/bin/cilium</span></span></code></pre></div><p>Bash completion</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">source &lt;(cilium completion bash)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> &gt;&gt;</span><span style="color:#C3E88D;"> ~/.bashrc</span></span></code></pre></div><p>Show status of kubernetes cluster, if you have cilium installed.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cilium</span><span style="color:#C3E88D;"> status</span><span style="color:#C3E88D;"> --wait</span></span></code></pre></div><p>Check status details</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> kube-system</span><span style="color:#C3E88D;"> logs</span><span style="color:#C3E88D;"> -l</span><span style="color:#C3E88D;"> k8s-app=cilium</span></span>
<span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> kube-system</span><span style="color:#C3E88D;"> exec</span><span style="color:#C3E88D;"> ds/cilium</span><span style="color:#C3E88D;"> --</span><span style="color:#C3E88D;"> cilium-dbg</span><span style="color:#C3E88D;"> status</span><span style="color:#C3E88D;"> --verbose</span></span></code></pre></div><p>Make connectivity test</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cilium</span><span style="color:#C3E88D;"> connectivity</span><span style="color:#C3E88D;"> test</span></span></code></pre></div><p>Install experimental CRDs</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/experimental-install.yaml</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;"># https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/standard-install.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> apply</span><span style="color:#C3E88D;"> -f</span><span style="color:#C3E88D;"> https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/experimental-install.yaml</span></span></code></pre></div><h2 id="modules" tabindex="-1">Modules <a class="header-anchor" href="#modules" aria-label="Permalink to &quot;Modules&quot;">​</a></h2><p><code>tproxy</code> module is used for transparent proxying.<br> In <code>WSL2</code> not exist yet this module but use a patched kernel to use it.</p><p>Get existing kernel from <a href="https://github.com/Locietta/xanmod-kernel-WSL2" target="_blank" rel="noreferrer">https://github.com/Locietta/xanmod-kernel-WSL2</a></p><details><summary>Kernel Build</summary><p>Clone microsoft kernel and compile it.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#C3E88D;"> clone</span><span style="color:#C3E88D;"> https://github.com/microsoft/WSL2-Linux-Kernel.git</span><span style="color:#C3E88D;"> --depth=1</span><span style="color:#C3E88D;"> -b</span><span style="color:#C3E88D;"> linux-msft-wsl-6.6.y</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> apt</span><span style="color:#C3E88D;"> update</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#FFCB6B;"> sudo</span><span style="color:#C3E88D;"> apt</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> build-essential</span><span style="color:#C3E88D;"> flex</span><span style="color:#C3E88D;"> bison</span><span style="color:#C3E88D;"> libssl-dev</span><span style="color:#C3E88D;"> libelf-dev</span><span style="color:#C3E88D;"> bc</span><span style="color:#C3E88D;"> python3</span><span style="color:#C3E88D;"> pahole</span><span style="color:#C3E88D;"> cpio</span><span style="color:#C3E88D;"> bc</span><span style="color:#C3E88D;"> libncurses-dev</span><span style="color:#C3E88D;"> pkg-config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#C3E88D;"> WSL2-Linux-Kernel</span></span>
<span class="line"><span style="color:#FFCB6B;">make</span><span style="color:#C3E88D;"> -j</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">nproc</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> KCONFIG_CONFIG=Microsoft/config-wsl</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> make</span><span style="color:#C3E88D;"> modules_install</span><span style="color:#C3E88D;"> headers_install</span></span>
<span class="line"><span style="color:#FFCB6B;">cp</span><span style="color:#C3E88D;"> arch/x86_64/boot/bzImage</span><span style="color:#C3E88D;"> /mnt/c/tools/kernel/bzImage</span></span></code></pre></div></details><p>Edit <code>/mnt/c/Users/&lt;username&gt;/.wslconfig</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span>[wsl2]</span></span>
<span class="line"><span>kernel = C:\\\\tools\\\\kernel\\\\bzImage-x64v3</span></span>
<span class="line"><span>kernelCommandLine = cgroup_no_v1=all</span></span></code></pre></div><p><code>wsl.exe --shutdown</code> and restart WSL2.<br><code>uname -a</code> to show kernel version.</p><h2 id="issues" tabindex="-1">Issues <a class="header-anchor" href="#issues" aria-label="Permalink to &quot;Issues&quot;">​</a></h2><blockquote><p>Try to restart wsl or change kernel</p></blockquote><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span>503</span></span>
<span class="line"><span>upstream connect error or disconnect/reset before headers. reset reason: connection timeout</span></span></code></pre></div><blockquote><p>Not need to have l2 announcement policy</p></blockquote><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#89DDFF;"> &lt;&lt;</span><span style="color:#89DDFF;">EOF</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> kubectl</span><span style="color:#C3E88D;"> apply</span><span style="color:#C3E88D;"> -f</span><span style="color:#C3E88D;"> -</span></span>
<span class="line"><span style="color:#C3E88D;">apiVersion: &quot;cilium.io/v2alpha1&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">kind: CiliumL2AnnouncementPolicy</span></span>
<span class="line"><span style="color:#C3E88D;">metadata:</span></span>
<span class="line"><span style="color:#C3E88D;">  name: policy</span></span>
<span class="line"><span style="color:#C3E88D;">spec:</span></span>
<span class="line"><span style="color:#C3E88D;">  externalIPs: true</span></span>
<span class="line"><span style="color:#C3E88D;">  loadBalancerIPs: true</span></span>
<span class="line"><span style="color:#C3E88D;">  serviceSelector:</span></span>
<span class="line"><span style="color:#C3E88D;">    matchLabels:</span></span>
<span class="line"><span style="color:#C3E88D;">      announce: arp</span></span>
<span class="line"><span style="color:#C3E88D;">  interfaces:</span></span>
<span class="line"><span style="color:#C3E88D;">    - ^eth[0-9]+</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span></code></pre></div><p>Another example</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">apiVersion</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">cilium.io/v2alpha1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">kind</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> CiliumL2AnnouncementPolicy</span></span>
<span class="line"><span style="color:#F07178;">metadata</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> empire</span></span>
<span class="line"><span style="color:#F07178;">spec</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  externalIPs</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#F07178;">  loadBalancerIPs</span><span style="color:#89DDFF;">:</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#F07178;">  interfaces</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#C3E88D;"> eth0</span></span>
<span class="line"><span style="color:#F07178;">  serviceSelector</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    matchLabels</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      announce</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> arp</span></span>
<span class="line"><span style="color:#F07178;">  nodeSelector</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    matchExpressions</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      -</span><span style="color:#F07178;"> key</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> node-role.kubernetes.io/control-plane</span></span>
<span class="line"><span style="color:#F07178;">        operator</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> DoesNotExist</span></span></code></pre></div><p>Label the service</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> label</span><span style="color:#C3E88D;"> svc</span><span style="color:#C3E88D;"> deathstar</span><span style="color:#C3E88D;"> announce=arp</span></span></code></pre></div><h2 id="tcp-dump" tabindex="-1">TCP Dump <a class="header-anchor" href="#tcp-dump" aria-label="Permalink to &quot;TCP Dump&quot;">​</a></h2><p>Inside of the cilium pod installed this one <code>tcpdump</code> and <code>termshark</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">apt-get</span><span style="color:#C3E88D;"> update</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#EEFFFF;"> DEBIAN_FRONTEND</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">noninteractive</span><span style="color:#FFCB6B;"> apt-get</span><span style="color:#C3E88D;"> -y</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> tcpdump</span><span style="color:#C3E88D;"> termshark</span></span></code></pre></div><p>Start dumping</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">tcpdump</span><span style="color:#C3E88D;"> -i</span><span style="color:#C3E88D;"> any</span><span style="color:#C3E88D;"> arp</span><span style="color:#C3E88D;"> -w</span><span style="color:#C3E88D;"> arp.pcap</span></span></code></pre></div><p>Make request and after that open it with termshark</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> /root/.config/termshark/</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#C3E88D;"> -e</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">[main]\\ndark-mode = true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#C3E88D;"> /root/.config/termshark/termshark.toml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#EEFFFF;">TERM</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">xterm-256color</span><span style="color:#FFCB6B;"> termshark</span><span style="color:#C3E88D;"> -r</span><span style="color:#C3E88D;"> arp.pcap</span></span></code></pre></div><h2 id="forward-10-0-10-0-24-to-cilium" tabindex="-1">Forward 10.0.10.0/24 to cilium <a class="header-anchor" href="#forward-10-0-10-0-24-to-cilium" aria-label="Permalink to &quot;Forward 10.0.10.0/24 to cilium&quot;">​</a></h2><blockquote><p>TODO Still checking</p></blockquote><p>First we need to forward all traffic to cilium gateway.</p><p>Do it in node:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># ip route add 10.0.10.0/24 via $(kubectl get nodes -o jsonpath=&#39;{.items[0].status.addresses[?(@.type==&quot;InternalIP&quot;)].address}&#39;)</span></span>
<span class="line"><span style="color:#FFCB6B;">sysctl</span><span style="color:#C3E88D;"> -w</span><span style="color:#C3E88D;"> net.ipv4.ip_forward=</span><span style="color:#F78C6C;">1</span></span></code></pre></div><p>Second we need to tell in our local machine to forward all traffic to that machine.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ip</span><span style="color:#C3E88D;"> route</span><span style="color:#C3E88D;"> add</span><span style="color:#C3E88D;"> 10.0.10.0/24</span><span style="color:#C3E88D;"> via</span><span style="color:#89DDFF;"> $(</span><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> inspect</span><span style="color:#C3E88D;"> -f</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> kind-control-plane</span><span style="color:#89DDFF;">)</span></span></code></pre></div>`,44)]))}const D=a(p,[["render",o]]);export{u as __pageData,D as default};
