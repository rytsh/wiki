import{_ as s,o as a,c as n,a4 as l}from"./chunks/framework.wXO1VFWK.js";const F=JSON.parse('{"title":"Load Balancers","description":"","frontmatter":{},"headers":[],"relativePath":"tools/server/load_balancer.md","filePath":"tools/server/load_balancer.md","lastUpdated":1701909486000}'),e={name:"tools/server/load_balancer.md"},p=l(`<h1 id="load-balancers" tabindex="-1">Load Balancers <a class="header-anchor" href="#load-balancers" aria-label="Permalink to &quot;Load Balancers&quot;">​</a></h1><h2 id="haproxy" tabindex="-1">HAPROXY <a class="header-anchor" href="#haproxy" aria-label="Permalink to &quot;HAPROXY&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code"><code><span class="line"><span style="color:#FFCB6B;">apk</span><span style="color:#C3E88D;"> add</span><span style="color:#C3E88D;"> haproxy</span></span></code></pre></div><p>Add config to the <code>/etc/haproxy/haproxy.cfg</code> file.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code"><code><span class="line"><span style="color:#FFCB6B;">mv</span><span style="color:#C3E88D;"> /etc/haproxy/haproxy.cfg</span><span style="color:#C3E88D;"> /etc/haproxy/haproxy.cfg.bak</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code"><code><span class="line"><span style="color:#FFCB6B;">defaults</span></span>
<span class="line"><span style="color:#FFCB6B;">  maxconn</span><span style="color:#F78C6C;"> 4000</span></span>
<span class="line"><span style="color:#FFCB6B;">  mode</span><span style="color:#C3E88D;"> http</span></span>
<span class="line"><span style="color:#FFCB6B;">  log</span><span style="color:#C3E88D;"> /dev/log</span><span style="color:#C3E88D;"> local0</span></span>
<span class="line"><span style="color:#FFCB6B;">  option</span><span style="color:#C3E88D;"> dontlognull</span></span>
<span class="line"><span style="color:#FFCB6B;">  timeout</span><span style="color:#C3E88D;"> http-request</span><span style="color:#F78C6C;"> 5</span><span style="color:#C3E88D;">s</span></span>
<span class="line"><span style="color:#FFCB6B;">  timeout</span><span style="color:#C3E88D;"> connect</span><span style="color:#F78C6C;"> 5000</span></span>
<span class="line"><span style="color:#FFCB6B;">  timeout</span><span style="color:#C3E88D;"> client</span><span style="color:#F78C6C;"> 2000000</span><span style="color:#546E7A;font-style:italic;"> # ddos protection</span></span>
<span class="line"><span style="color:#FFCB6B;">  timeout</span><span style="color:#C3E88D;"> server</span><span style="color:#F78C6C;"> 2000000</span><span style="color:#546E7A;font-style:italic;"> # stick-table type ip size 100k expire 30s store conn_cur</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">frontend</span><span style="color:#C3E88D;"> kubernetes</span></span>
<span class="line"><span style="color:#FFCB6B;">    bind</span><span style="color:#EEFFFF;"> *</span><span style="color:#C3E88D;">:6443</span></span>
<span class="line"><span style="color:#FFCB6B;">    mode</span><span style="color:#C3E88D;"> tcp</span></span>
<span class="line"><span style="color:#FFCB6B;">    option</span><span style="color:#C3E88D;"> tcplog</span></span>
<span class="line"><span style="color:#FFCB6B;">    default_backend</span><span style="color:#C3E88D;"> kubernetes-cluster</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">backend</span><span style="color:#C3E88D;"> kubernetes-cluster</span></span>
<span class="line"><span style="color:#FFCB6B;">    option</span><span style="color:#C3E88D;"> httpchk</span><span style="color:#C3E88D;"> GET</span><span style="color:#C3E88D;"> /healthz</span></span>
<span class="line"><span style="color:#FFCB6B;">    http-check</span><span style="color:#C3E88D;"> expect</span><span style="color:#C3E88D;"> status</span><span style="color:#F78C6C;"> 200</span></span>
<span class="line"><span style="color:#FFCB6B;">    mode</span><span style="color:#C3E88D;"> tcp</span></span>
<span class="line"><span style="color:#FFCB6B;">    option</span><span style="color:#C3E88D;"> ssl-hello-chk</span></span>
<span class="line"><span style="color:#FFCB6B;">    balance</span><span style="color:#C3E88D;"> roundrobin</span></span>
<span class="line"><span style="color:#FFCB6B;">        server</span><span style="color:#C3E88D;"> master1</span><span style="color:#C3E88D;"> master1.cluster.kube-cluster:6443</span><span style="color:#C3E88D;"> check</span></span>
<span class="line"><span style="color:#FFCB6B;">        server</span><span style="color:#C3E88D;"> master2</span><span style="color:#C3E88D;"> master2.cluster.kube-cluster:6443</span><span style="color:#C3E88D;"> check</span></span>
<span class="line"><span style="color:#FFCB6B;">        server</span><span style="color:#C3E88D;"> master3</span><span style="color:#C3E88D;"> master3.cluster.kube-cluster:6443</span><span style="color:#C3E88D;"> check</span></span></code></pre></div><p>Enable and start the service.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code"><code><span class="line"><span style="color:#FFCB6B;">rc-update</span><span style="color:#C3E88D;"> add</span><span style="color:#C3E88D;"> haproxy</span><span style="color:#C3E88D;"> default</span></span>
<span class="line"><span style="color:#FFCB6B;">rc-service</span><span style="color:#C3E88D;"> haproxy</span><span style="color:#C3E88D;"> start</span></span></code></pre></div><p>Check the connection</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#C3E88D;"> -k</span><span style="color:#C3E88D;"> https://cluster.kube-cluster:6443/healthz</span></span></code></pre></div>`,10),o=[p];function t(c,r,i,y,C,d){return a(),n("div",null,o)}const B=s(e,[["render",t]]);export{F as __pageData,B as default};
