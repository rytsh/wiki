import{_ as a,c as e,a2 as n,o as p}from"./chunks/framework.BQmytedh.js";const y=JSON.parse('{"title":"Kubernetes Packages","description":"","frontmatter":{},"headers":[],"relativePath":"development/kubernetes/cluster/packages.md","filePath":"development/kubernetes/cluster/packages.md","lastUpdated":1735526840000}'),l={name:"development/kubernetes/cluster/packages.md"};function o(t,s,c,r,i,d){return p(),e("div",null,s[0]||(s[0]=[n(`<h1 id="kubernetes-packages" tabindex="-1">Kubernetes Packages <a class="header-anchor" href="#kubernetes-packages" aria-label="Permalink to &quot;Kubernetes Packages&quot;">​</a></h1><p>Use <a href="https://artifacthub.io/" target="_blank" rel="noreferrer">https://artifacthub.io/</a> to find packages for Kubernetes.</p><p>Before installing any package, make sure you have <code>kubectl</code> and <code>helm</code> installed.<br> Also setup completed for your cluster like load balancer, metrics server, etc.</p><h2 id="prometheus-stack" tabindex="-1">Prometheus Stack <a class="header-anchor" href="#prometheus-stack" aria-label="Permalink to &quot;Prometheus Stack&quot;">​</a></h2><blockquote><p><a href="https://artifacthub.io/packages/helm/prometheus-community/prometheus" target="_blank" rel="noreferrer">https://artifacthub.io/packages/helm/prometheus-community/prometheus</a></p></blockquote><p>This will add prometheus and grafana to your cluster. This stack uses <code>helm</code> to install.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> repo</span><span style="color:#C3E88D;"> add</span><span style="color:#C3E88D;"> prometheus-community</span><span style="color:#C3E88D;"> https://prometheus-community.github.io/helm-charts</span></span>
<span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> repo</span><span style="color:#C3E88D;"> update</span></span></code></pre></div><blockquote><p>for different storage classes, change <code>storageClassName</code></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#C3E88D;">--set prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName=local-storage</span></span>
<span class="line"><span style="color:#C3E88D;">--set grafana.persistence.storageClassName=local-storage</span></span></code></pre></div></blockquote><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> kube-prometheus-stack</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --create-namespace</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --namespace</span><span style="color:#C3E88D;"> kube-prometheus-stack</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  prometheus-community/kube-prometheus-stack</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage=4Gi</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> grafana.persistence.enabled=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> grafana.persistence.type=pvc</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> grafana.persistence.size=2Gi</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">grafana.adminPassword=kube#1234</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="loki-stack" tabindex="-1">Loki Stack <a class="header-anchor" href="#loki-stack" aria-label="Permalink to &quot;Loki Stack&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> repo</span><span style="color:#C3E88D;"> add</span><span style="color:#C3E88D;"> grafana</span><span style="color:#C3E88D;"> https://grafana.github.io/helm-charts</span></span>
<span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> repo</span><span style="color:#C3E88D;"> update</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> loki</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --namespace</span><span style="color:#C3E88D;"> kube-prometheus-stack</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  grafana/loki-stack</span></span></code></pre></div><p>Add to grafana with this address <code>http://loki:3100</code></p><blockquote><p>TODO: change data source to persistance</p></blockquote><h2 id="tempo" tabindex="-1">Tempo <a class="header-anchor" href="#tempo" aria-label="Permalink to &quot;Tempo&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> tempo</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --namespace</span><span style="color:#C3E88D;"> kube-prometheus-stack</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  grafana/tempo</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> persistence.enabled=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> persistence.size=5Gi</span></span></code></pre></div><p>Add to grafana with this address <code>http://tempo:3100</code></p><h2 id="access-grafana" tabindex="-1">Access Grafana <a class="header-anchor" href="#access-grafana" aria-label="Permalink to &quot;Access Grafana&quot;">​</a></h2><p>Access with <code>grafana.kube.com</code> with <code>admin</code> and <code>kube#1234</code> password.</p><p>Add route:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#89DDFF;"> &lt;&lt;</span><span style="color:#89DDFF;">EOF</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> kubectl</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> kube-prometheus-stack</span><span style="color:#C3E88D;"> apply</span><span style="color:#C3E88D;"> -f</span><span style="color:#C3E88D;"> -</span></span>
<span class="line"><span style="color:#C3E88D;">apiVersion: gateway.networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#C3E88D;">kind: HTTPRoute</span></span>
<span class="line"><span style="color:#C3E88D;">metadata:</span></span>
<span class="line"><span style="color:#C3E88D;">  name: grafana-kube</span></span>
<span class="line"><span style="color:#C3E88D;">spec:</span></span>
<span class="line"><span style="color:#C3E88D;">  parentRefs:</span></span>
<span class="line"><span style="color:#C3E88D;">  - name: kube</span></span>
<span class="line"><span style="color:#C3E88D;">    namespace: default</span></span>
<span class="line"><span style="color:#C3E88D;">  hostnames:</span></span>
<span class="line"><span style="color:#C3E88D;">  - &quot;grafana.kube.com&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">  rules:</span></span>
<span class="line"><span style="color:#C3E88D;">  - matches:</span></span>
<span class="line"><span style="color:#C3E88D;">    - path:</span></span>
<span class="line"><span style="color:#C3E88D;">        type: PathPrefix</span></span>
<span class="line"><span style="color:#C3E88D;">        value: /</span></span>
<span class="line"><span style="color:#C3E88D;">    backendRefs:</span></span>
<span class="line"><span style="color:#C3E88D;">    - name: kube-prometheus-stack-grafana</span></span>
<span class="line"><span style="color:#C3E88D;">      port: 80</span></span>
<span class="line"><span style="color:#C3E88D;">      namespace: kube-prometheus-stack</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span></code></pre></div><p>Test with curl in kind container</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#C3E88D;"> -kv</span><span style="color:#C3E88D;"> --connect-to</span><span style="color:#C3E88D;"> grafana.kube.com:443:10.0.10.1:443</span><span style="color:#C3E88D;"> https://grafana.kube.com</span></span></code></pre></div>`,23)]))}const h=a(l,[["render",o]]);export{y as __pageData,h as default};
