import{_ as a,c as e,a2 as n,o}from"./chunks/framework.BQmytedh.js";const D=JSON.parse('{"title":"Registry","description":"","frontmatter":{},"headers":[],"relativePath":"development/kubernetes/cluster/registry.md","filePath":"development/kubernetes/cluster/registry.md","lastUpdated":1735526840000}'),t={name:"development/kubernetes/cluster/registry.md"};function l(p,s,r,c,i,y){return o(),e("div",null,s[0]||(s[0]=[n(`<h1 id="registry" tabindex="-1">Registry <a class="header-anchor" href="#registry" aria-label="Permalink to &quot;Registry&quot;">â€‹</a></h1><blockquote><p>TODO: UPDATE HERE</p></blockquote><p>When moving images to kind like that it is slow and and every cluster will have to download the same image. To avoid this we can use a registry.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#89DDFF;"> &lt;&lt;</span><span style="color:#89DDFF;">EOF</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> grep</span><span style="color:#C3E88D;"> -v</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">^[[:space:]]*$</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> xargs</span><span style="color:#C3E88D;"> -I</span><span style="color:#C3E88D;"> {}</span><span style="color:#C3E88D;"> sh</span><span style="color:#C3E88D;"> -c</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">docker pull {} &amp;&amp; kind load docker-image {}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/prometheus-operator/prometheus-config-reloader:v0.79.2</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/prometheus-operator/prometheus-operator:v0.79.2</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/prometheus/alertmanager:v0.27.0</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/prometheus/node-exporter:v1.8.2</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/prometheus/prometheus:v3.0.1</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> --name</span><span style="color:#C3E88D;"> proxy</span><span style="color:#C3E88D;"> --restart=always</span><span style="color:#C3E88D;"> --net=kind</span><span style="color:#C3E88D;"> -e</span><span style="color:#C3E88D;"> REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io</span><span style="color:#C3E88D;"> registry:2</span></span></code></pre></div>`,5)]))}const u=a(t,[["render",l]]);export{D as __pageData,u as default};
