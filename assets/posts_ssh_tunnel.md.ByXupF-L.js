import{_ as s,c as e,o as a,a4 as n}from"./chunks/framework.BIfEuBG4.js";const C=JSON.parse('{"title":"SSH Tunnel","description":"","frontmatter":{},"headers":[],"relativePath":"posts/ssh_tunnel.md","filePath":"posts/ssh_tunnel.md","lastUpdated":1705267885000}'),t={name:"posts/ssh_tunnel.md"},o=n(`<h1 id="ssh-tunnel" tabindex="-1">SSH Tunnel <a class="header-anchor" href="#ssh-tunnel" aria-label="Permalink to &quot;SSH Tunnel&quot;">​</a></h1><p>sshuttle is very useful for accessing a remote network via ssh.</p><p>First run in a ssh server container in the remote machine which also has python:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> --restart</span><span style="color:#C3E88D;"> always</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> 8822:22</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#EEFFFF;">--name </span><span style="color:#C3E88D;">ssh-tunnel</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#EEFFFF;">ghcr.io/rytsh/dock/ssh:latest</span></span></code></pre></div><p>Default username and password is <code>user</code> and <code>user#1234</code>.</p><p>Try to access with ssh but skip host key checking due to it is a new container:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ssh</span><span style="color:#C3E88D;"> -p</span><span style="color:#F78C6C;"> 8822</span><span style="color:#C3E88D;"> -o</span><span style="color:#C3E88D;"> StrictHostKeyChecking=no</span><span style="color:#C3E88D;"> user@localhost</span></span></code></pre></div><h2 id="sshuttle" tabindex="-1">sshuttle <a class="header-anchor" href="#sshuttle" aria-label="Permalink to &quot;sshuttle&quot;">​</a></h2><p>Install sshuttle in the local machine <a href="https://github.com/sshuttle/sshuttle" target="_blank" rel="noreferrer">sshuttle</a>.<br> This service redirect our network traffic to the remote network via ssh.</p><p>Now we can access the <code>10.10.1.0/24</code> network in the remote machine with running:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#89DDFF;"> $(</span><span style="color:#82AAFF;">which</span><span style="color:#C3E88D;"> sshuttle</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> -v</span><span style="color:#C3E88D;"> -e</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">ssh -o StrictHostKeyChecking=no</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> --python</span><span style="color:#C3E88D;"> python3</span><span style="color:#C3E88D;"> -r</span><span style="color:#C3E88D;"> user@localhost</span><span style="color:#C3E88D;"> 10.10.1.0/24</span></span></code></pre></div>`,11),l=[o];function p(c,r,h,i,d,u){return a(),e("div",null,l)}const F=s(t,[["render",p]]);export{C as __pageData,F as default};
