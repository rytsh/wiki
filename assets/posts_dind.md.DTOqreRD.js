import{_ as n,o as a,c as o,ag as l}from"./chunks/framework.BcBuEkoe.js";const y=JSON.parse('{"title":"DinD","description":"Docker in Docker (DinD) is a method to run Docker inside a Docker container. This is useful when you want to run containers in your CI/CD pipelines.","frontmatter":{"head":[["meta",{"name":"description","content":"Docker in Docker (DinD) is a method to run Docker inside a Docker container. This is useful when you want to run containers in your CI/CD pipelines."}],["meta",{"name":"keywords","content":"dind docker-in-docker gitlab testcontainers"}]]},"headers":[],"relativePath":"posts/dind.md","filePath":"posts/dind.md","lastUpdated":1725666237000}'),p={name:"posts/dind.md"};function e(t,s,c,r,F,D){return a(),o("div",null,s[0]||(s[0]=[l(`<h1 id="dind" tabindex="-1">DinD <a class="header-anchor" href="#dind" aria-label="Permalink to &quot;DinD&quot;">​</a></h1><p>Docker in Docker (DinD) is a method to run Docker inside a Docker container. This is useful when you want to run containers in your CI/CD pipelines.</p><p>For example, you can use DinD in your CI/CD pipelines to up databases, run tests, and clean up the environment.</p><p>Most important thing you need to remember. When you create container and mapped a port than that port is mapping to DinD host. So you need to use always that DinD host address to reach that port.</p><blockquote><p><code>TESTCONTAINERS_HOST_OVERRIDE</code> is a good way to set the DinD host address.</p></blockquote><p>DinD is base container of docker.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># default is alpine version</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> pull</span><span style="color:#C3E88D;"> docker:27.1.2</span></span></code></pre></div><p>Check the <a href="https://hub.docker.com/_/docker/tags" target="_blank" rel="noreferrer">https://hub.docker.com/_/docker/tags</a> to get the latest version.</p><h2 id="usage-in-gitlab-runner-and-pipeline" tabindex="-1">Usage in Gitlab - Runner and Pipeline <a class="header-anchor" href="#usage-in-gitlab-runner-and-pipeline" aria-label="Permalink to &quot;Usage in Gitlab - Runner and Pipeline&quot;">​</a></h2><p>First of all, we need previliged mode to run Docker in Docker.</p><blockquote><p>This is for explaining purposes. Need to be edited before use.</p></blockquote><div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">listen_address </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">:9252</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#EEFFFF;">concurrent </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 20</span></span>
<span class="line"><span style="color:#EEFFFF;">check_interval </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">session_server</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#EEFFFF;">  session_timeout </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 1800</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[[</span><span style="color:#FFCB6B;">runners</span><span style="color:#89DDFF;">]]</span></span>
<span class="line"><span style="color:#EEFFFF;">  name </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">my-runner01.local</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#EEFFFF;">  url </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">https://local-gitlab.com/</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#EEFFFF;">  token </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">XXXXXXXXXXXXXXXX</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#EEFFFF;">  executor </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">docker</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#EEFFFF;">  environment </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https_proxy=http://my-proxy.com:3128</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#546E7A;font-style:italic;"> # Add some environment variables for use</span></span>
<span class="line"><span style="color:#EEFFFF;">  shell </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">bash</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  [</span><span style="color:#FFCB6B;">runners</span><span style="color:#EEFFFF;">.</span><span style="color:#FFCB6B;">docker</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#EEFFFF;">    services_privileged </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#EEFFFF;">    allowed_privileged_services </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rytsh/dind:*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#546E7A;font-style:italic;"> # Only allow this image to run in privileged mode as service</span></span>
<span class="line"><span style="color:#EEFFFF;">    allowed_images </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">allow/signed/*:*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">allow/*/*:*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#EEFFFF;">    tls_verify </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#EEFFFF;">    image </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">alpine:3.20.2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#546E7A;font-style:italic;"> # default image</span></span>
<span class="line"><span style="color:#EEFFFF;">    privileged </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#EEFFFF;">    disable_entrypoint_overwrite </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#EEFFFF;">    oom_kill_disable </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#EEFFFF;">    disable_cache </span><span style="color:#89DDFF;">=</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#EEFFFF;">    volumes </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/var/run/docker.sock:/var/run/docker_runner.sock</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/var/lib/docker/cache/cache/:/cache</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">/var/lib/docker/cache/gomod/:/go/pkg/mod/cache/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">/var/lib/docker/cache/go-build/:/root/.cache/go-build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#546E7A;font-style:italic;"> # Add some volumes for cache</span></span>
<span class="line"><span style="color:#EEFFFF;">    pull_policy </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">if-not-present</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#EEFFFF;">    shm_size </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 0</span></span></code></pre></div><p>I mounted also <code>docker.sock</code> but in the different path. This is because I don&#39;t want to use it in the default path.</p><p>Now we need to use DIND in the pipeline as service.</p><blockquote><p>Truncated scripts in the extends.</p></blockquote><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#F07178;">prebuild-go-coverage-dind</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  extends</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> .go-coverage</span></span>
<span class="line"><span style="color:#F07178;">  services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $DIND_IMAGE</span></span>
<span class="line"><span style="color:#F07178;">      alias</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> docker</span></span>
<span class="line"><span style="color:#F07178;">      command</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">--tls=false</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#F07178;">  variables</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">    # Instruct Testcontainers to use the daemon of DinD, use port 2375 for non-tls connections.</span></span>
<span class="line"><span style="color:#F07178;">    DOCKER_HOST</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">tcp://docker:2375</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">    # Instruct Docker not to start over TLS.</span></span>
<span class="line"><span style="color:#F07178;">    DOCKER_TLS_CERTDIR</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;&quot;</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">    # Improve performance with overlayfs.</span></span>
<span class="line"><span style="color:#F07178;">    DOCKER_DRIVER</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> overlay2</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;">    # Testcontainers can get the host address from the DinD container.</span></span>
<span class="line"><span style="color:#F07178;">    TESTCONTAINERS_HOST_OVERRIDE</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">docker</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">  rules</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> if</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $POSTGRES_AVAILABLE == &quot;Y&quot;</span></span>
<span class="line"><span style="color:#F07178;">      when</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> never</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> if</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $DIND_AVAILABLE == &quot;N&quot;</span></span>
<span class="line"><span style="color:#F07178;">      when</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> never</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> if</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $PIPELINE_DISABLE_JOB_PREBUILD_GO_COVERAGE == &quot;Y&quot; || $PIPELINE_DISABLE_CI_TESTER == &quot;Y&quot;</span></span>
<span class="line"><span style="color:#F07178;">      when</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> never</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> if</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $CI_COMMIT_REF_NAME =~ /feature\\/depmaster/</span></span>
<span class="line"><span style="color:#F07178;">      when</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> never</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> if</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">$CI_PIPELINE_SOURCE == &quot;merge_request_event&quot;</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> if</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> $CI_COMMIT_BRANCH &amp;&amp; $CI_OPEN_MERGE_REQUESTS &amp;&amp; $CI_PIPELINE_SOURCE == &quot;push&quot;</span></span>
<span class="line"><span style="color:#F07178;">      when</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> never</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> when</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> on_success</span></span></code></pre></div>`,16)]))}const u=n(p,[["render",e]]);export{y as __pageData,u as default};
