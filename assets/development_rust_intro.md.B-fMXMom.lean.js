import{_ as e,c as s,a2 as l,o as t}from"./chunks/framework.BQmytedh.js";const u=JSON.parse('{"title":"Rust","description":"","frontmatter":{},"headers":[],"relativePath":"development/rust/intro.md","filePath":"development/rust/intro.md","lastUpdated":1741204180000}'),n={name:"development/rust/intro.md"};function o(r,a,p,c,i,d){return t(),s("div",null,a[0]||(a[0]=[l(`<h1 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to &quot;Rust&quot;">​</a></h1><blockquote><p>I&#39;m learning Rust, and I&#39;m going to write about it here what I learn and what I think about it.<br><a href="https://github.com/rytsh/rust00" target="_blank" rel="noreferrer">https://github.com/rytsh/rust00</a></p></blockquote><p>Check this link for intro <a href="https://www.rust-lang.org/learn" target="_blank" rel="noreferrer">https://www.rust-lang.org/learn</a></p><ul><li><a href="https://doc.rust-lang.org/book/" target="_blank" rel="noreferrer">https://doc.rust-lang.org/book/</a></li><li><a href="https://doc.rust-lang.org/reference/" target="_blank" rel="noreferrer">https://doc.rust-lang.org/reference/</a></li><li><a href="https://doc.rust-lang.org/rust-by-example/" target="_blank" rel="noreferrer">https://doc.rust-lang.org/rust-by-example/</a></li><li><a href="https://doc.rust-lang.org/cargo/index.html" target="_blank" rel="noreferrer">https://doc.rust-lang.org/cargo/index.html</a></li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#C3E88D;"> --proto</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">=https</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> --tlsv1.2</span><span style="color:#C3E88D;"> -sSf</span><span style="color:#C3E88D;"> https://sh.rustup.rs</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> sh</span></span></code></pre></div><p>For update use <code>rustup update</code>.</p><p>After that it is adding in your env values in <code>.bashrc</code>. Need to refresh your terminal.</p><h2 id="_01-hello-world" tabindex="-1">01 - Hello World <a class="header-anchor" href="#_01-hello-world" aria-label="Permalink to &quot;01 - Hello World&quot;">​</a></h2><div class="language-rust"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#82AAFF;"> main</span><span style="color:#89DDFF;">()</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#82AAFF;">    println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Create executable file with this command:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># generate executable file with name hello</span></span>
<span class="line"><span style="color:#FFCB6B;">rustc</span><span style="color:#C3E88D;"> hello.rs</span></span></code></pre></div><p>Extension of Rust files is <code>.rs</code>.</p><p>For generating Obj file</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># generate obj file with name hello.o</span></span>
<span class="line"><span style="color:#FFCB6B;">rustc</span><span style="color:#C3E88D;"> --emit=obj</span><span style="color:#C3E88D;"> hello.rs</span></span></code></pre></div><h2 id="cargo-new-package" tabindex="-1">Cargo New Package <a class="header-anchor" href="#cargo-new-package" aria-label="Permalink to &quot;Cargo New Package&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#C3E88D;"> new</span><span style="color:#C3E88D;"> hello_cargo</span></span></code></pre></div><p>This will create a new directory with the name <code>hello_cargo</code> and a new Rust package inside it.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#C3E88D;"> hello_cargo</span></span></code></pre></div><p>Run cargo build</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#C3E88D;"> build</span></span></code></pre></div><p>It is creating under the <code>target/debug</code> directory.</p><p>Use <code>cargo build --release</code> for release build.</p><p><code>--bin</code> is for binary and <code>--lib</code> is for library use when creating new package.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#C3E88D;"> new</span><span style="color:#C3E88D;"> hello_bin</span><span style="color:#C3E88D;"> --bin</span></span>
<span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#C3E88D;"> new</span><span style="color:#C3E88D;"> hello_lib</span><span style="color:#C3E88D;"> --lib</span></span></code></pre></div><p>Default work like <code>--bin</code>.</p><p>Clear artifacts with <code>cargo clean</code>.</p><h2 id="u128" tabindex="-1">u128 <a class="header-anchor" href="#u128" aria-label="Permalink to &quot;u128&quot;">​</a></h2><p>Rust has 128 bit signed and unsigned integers.</p>`,29)]))}const g=e(n,[["render",o]]);export{u as __pageData,g as default};
