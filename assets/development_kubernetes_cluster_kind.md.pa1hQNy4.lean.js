import{_ as a,c as n,a2 as e,o as l}from"./chunks/framework.BQmytedh.js";const u=JSON.parse('{"title":"Kind","description":"","frontmatter":{},"headers":[],"relativePath":"development/kubernetes/cluster/kind.md","filePath":"development/kubernetes/cluster/kind.md","lastUpdated":1735567375000}'),o={name:"development/kubernetes/cluster/kind.md"};function p(t,s,c,r,i,y){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="kind" tabindex="-1">Kind <a class="header-anchor" href="#kind" aria-label="Permalink to &quot;Kind&quot;">â€‹</a></h1><blockquote><p><a href="https://kind.sigs.k8s.io/" target="_blank" rel="noreferrer">https://kind.sigs.k8s.io/</a></p></blockquote><p>Easiest way to create a kubernetes cluster is open cluster in a docker container.<br> Containers will be as our nodes.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#C3E88D;"> -fSLO</span><span style="color:#C3E88D;"> https://github.com/kubernetes-sigs/kind/releases/download/v0.26.0/kind-linux-amd64</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#C3E88D;"> +x</span><span style="color:#C3E88D;"> kind-linux-amd64</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> mv</span><span style="color:#C3E88D;"> kind-linux-amd64</span><span style="color:#C3E88D;"> /usr/local/bin/kind</span></span></code></pre></div><p>Verify installation:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">kind</span><span style="color:#C3E88D;"> --version</span></span></code></pre></div><p>Add <code>bash</code> completion:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">source &lt;(kind completion bash)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> &gt;&gt;</span><span style="color:#C3E88D;"> ~/.bashrc</span></span></code></pre></div><p>Create a cluster with <code>cilium</code></p><blockquote><p><a href="https://docs.cilium.io/en/latest/installation/kind/" target="_blank" rel="noreferrer">https://docs.cilium.io/en/latest/installation/kind/</a></p></blockquote><p>Cilium can solve of networking between pods and nodes.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> mkdir</span><span style="color:#C3E88D;"> -p</span><span style="color:#C3E88D;"> /data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#89DDFF;"> &lt;&lt;</span><span style="color:#89DDFF;">EOF</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#C3E88D;"> kind-config.yaml</span></span>
<span class="line"><span style="color:#C3E88D;">kind: Cluster</span></span>
<span class="line"><span style="color:#C3E88D;">apiVersion: kind.x-k8s.io/v1alpha4</span></span>
<span class="line"><span style="color:#C3E88D;">nodes:</span></span>
<span class="line"><span style="color:#C3E88D;">- role: control-plane</span></span>
<span class="line"><span style="color:#C3E88D;">  extraMounts:</span></span>
<span class="line"><span style="color:#C3E88D;">  - hostPath: /data</span></span>
<span class="line"><span style="color:#C3E88D;">    containerPath: /var/local-path-provisioner</span></span>
<span class="line"><span style="color:#C3E88D;">networking:</span></span>
<span class="line"><span style="color:#C3E88D;">  disableDefaultCNI: true</span></span>
<span class="line"><span style="color:#C3E88D;">  kubeProxyMode: &quot;none&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">  podSubnet: &quot;10.2.0.0/16&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">  serviceSubnet: &quot;10.3.0.0/16&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">kind</span><span style="color:#C3E88D;"> create</span><span style="color:#C3E88D;"> cluster</span><span style="color:#C3E88D;"> --config=kind-config.yaml</span></span></code></pre></div><blockquote><p><code>crictl images</code> command in the kind container to check images.</p></blockquote><p>Install gateway CRDs to kubernetes cluster.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/experimental-install.yaml</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;"># https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/standard-install.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> apply</span><span style="color:#C3E88D;"> -f</span><span style="color:#C3E88D;"> https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/standard-install.yaml</span></span></code></pre></div><p>Install cilium:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> repo</span><span style="color:#C3E88D;"> add</span><span style="color:#C3E88D;"> cilium</span><span style="color:#C3E88D;"> https://helm.cilium.io/</span></span></code></pre></div><p>Before to install cilium push images first to kind</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#89DDFF;"> &lt;&lt;</span><span style="color:#89DDFF;">EOF</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> grep</span><span style="color:#C3E88D;"> -v</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">^[[:space:]]*$</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> xargs</span><span style="color:#C3E88D;"> -I</span><span style="color:#C3E88D;"> {}</span><span style="color:#C3E88D;"> sh</span><span style="color:#C3E88D;"> -c</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">docker pull {} &amp;&amp; kind load docker-image {}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/cilium/cilium:v1.16.5</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/cilium/cilium-envoy:v1.30.8-1733837904-eaae5aca0fb988583e5617170a65ac5aa51c0aa8</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/cilium/operator-generic:v1.16.5</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/cilium/hubble-relay:v1.16.5</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/cilium/hubble-ui-backend:v0.13.1</span></span>
<span class="line"><span style="color:#C3E88D;">quay.io/cilium/hubble-ui:v0.13.1</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span></code></pre></div><p>Enable cgroup v2 on <code>/mnt/c/Users/&lt;USER&gt;/.wslconfig</code> file, add this line:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span>[wsl2]</span></span>
<span class="line"><span>kernelCommandLine = cgroup_no_v1=all</span></span></code></pre></div><p>Now restart the WSL2 with <code>wsl --shutdown</code> command.</p><p>Enable in docker</p><p>Add this parameter <code>--default-cgroupns-mode=private</code> end of the <code>ExecStart</code> in <code>/etc/systemd/system/multi-user.target.wants/docker.service</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> systemctl</span><span style="color:#C3E88D;"> daemon-reload</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#C3E88D;"> systemctl</span><span style="color:#C3E88D;"> restart</span><span style="color:#C3E88D;"> docker</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">helm</span><span style="color:#C3E88D;"> install</span><span style="color:#C3E88D;"> cilium</span><span style="color:#C3E88D;"> cilium/cilium</span><span style="color:#C3E88D;"> --version</span><span style="color:#F78C6C;"> 1.16.5</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --namespace</span><span style="color:#C3E88D;"> kube-system</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> ipam.mode=kubernetes</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> routingMode=native</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> ipv4NativeRoutingCIDR=10.0.0.0/8</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> socketLB.enabled=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> bpf.tproxy=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> bpf.masquerade=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> image.pullPolicy=IfNotPresent</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> gatewayAPI.enabled=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> k8sServiceHost=kind-control-plane</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> k8sServicePort=</span><span style="color:#F78C6C;">6443</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> l2announcements.enabled=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> externalIPs.enabled=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> l7Proxy=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> kubeProxyReplacement=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> hubble.relay.enabled=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> hubble.ui.enabled=</span><span style="color:#89DDFF;">true</span><span style="color:#EEFFFF;"> \\</span></span>
<span class="line"><span style="color:#C3E88D;">  --set</span><span style="color:#C3E88D;"> operator.replicas=</span><span style="color:#F78C6C;">1</span></span></code></pre></div><p>After that set replicas 1 to cilium operator</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> kube-system</span><span style="color:#C3E88D;"> scale</span><span style="color:#C3E88D;"> deployment</span><span style="color:#C3E88D;"> cilium-operator</span><span style="color:#C3E88D;"> --replicas</span><span style="color:#F78C6C;"> 1</span></span></code></pre></div><p>Your cluster is ready to use in your kubeconfig file <code>~/.kube/config</code>.</p><blockquote><p>Give that config to <code>Lens</code> or use with kubectl.</p></blockquote><p>Remove cluster with <code>kind delete cluster</code> command.</p><h2 id="metrics-server" tabindex="-1">Metrics Server <a class="header-anchor" href="#metrics-server" aria-label="Permalink to &quot;Metrics Server&quot;">â€‹</a></h2><p>Metrics server just for current metrics show for kubernetes top command.<br> You need to still install prometheus stack for monitoring.</p><blockquote><p><a href="https://github.com/kubernetes-sigs/metrics-server" target="_blank" rel="noreferrer">https://github.com/kubernetes-sigs/metrics-server</a><br><a href="https://github.com/MartinHeinz/metrics-on-kind" target="_blank" rel="noreferrer">https://github.com/MartinHeinz/metrics-on-kind</a></p></blockquote><p>Enable metrics server to get metrics from your cluster.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> apply</span><span style="color:#C3E88D;"> -f</span><span style="color:#C3E88D;"> https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml</span></span></code></pre></div><p>Patch it for kind:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> patch</span><span style="color:#C3E88D;"> -n</span><span style="color:#C3E88D;"> kube-system</span><span style="color:#C3E88D;"> deployment</span><span style="color:#C3E88D;"> metrics-server</span><span style="color:#C3E88D;"> --type=json</span><span style="color:#C3E88D;"> -p</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">[{&quot;op&quot;:&quot;add&quot;,&quot;path&quot;:&quot;/spec/template/spec/containers/0/args/-&quot;,&quot;value&quot;:&quot;--kubelet-insecure-tls&quot;}]</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p>Verify of metrics api</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">kubectl</span><span style="color:#C3E88D;"> top</span><span style="color:#C3E88D;"> nodes</span></span></code></pre></div><h2 id="storage-pvc" tabindex="-1">Storage PVC <a class="header-anchor" href="#storage-pvc" aria-label="Permalink to &quot;Storage PVC&quot;">â€‹</a></h2><p>Kind uses <code>local-path-provisioner</code> for storage and claims automatically will create persistence volume for you.<br> Creating persistent volume claim with our <code>/data/</code> folder.</p><blockquote><p>Only support PVC with <code>ReadWriteOnce</code> mode.</p></blockquote><p>To use that with PVC</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># persistent-volume-claim.yaml</span></span>
<span class="line"><span style="color:#F07178;">apiVersion</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> v1</span></span>
<span class="line"><span style="color:#F07178;">kind</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> PersistentVolumeClaim</span></span>
<span class="line"><span style="color:#F07178;">metadata</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> local-pvc</span></span>
<span class="line"><span style="color:#F07178;">spec</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  accessModes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#C3E88D;"> ReadWriteOnce</span></span>
<span class="line"><span style="color:#F07178;">  resources</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    requests</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      storage</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> 1Gi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">---</span></span>
<span class="line"><span style="color:#546E7A;font-style:italic;"># example-pod.yaml</span></span>
<span class="line"><span style="color:#F07178;">apiVersion</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> v1</span></span>
<span class="line"><span style="color:#F07178;">kind</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> Pod</span></span>
<span class="line"><span style="color:#F07178;">metadata</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> example-pod</span></span>
<span class="line"><span style="color:#F07178;">spec</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  containers</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> test-container</span></span>
<span class="line"><span style="color:#F07178;">    image</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> nginx</span></span>
<span class="line"><span style="color:#F07178;">    volumeMounts</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    -</span><span style="color:#F07178;"> mountPath</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> /usr/share/nginx/html</span></span>
<span class="line"><span style="color:#F07178;">      name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> local-volume</span></span>
<span class="line"><span style="color:#F07178;">  volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  -</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> local-volume</span></span>
<span class="line"><span style="color:#F07178;">    persistentVolumeClaim</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">      claimName</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;"> local-pvc</span></span></code></pre></div><h2 id="load-balancer" tabindex="-1">Load Balancer <a class="header-anchor" href="#load-balancer" aria-label="Permalink to &quot;Load Balancer&quot;">â€‹</a></h2><blockquote><p>Gateway gets IP addresses with this IP pool</p></blockquote><p>Load balancer help to expose your services to outside IP address.</p><p>With <code>cilium</code></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#89DDFF;"> &lt;&lt;</span><span style="color:#89DDFF;">EOF</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> kubectl</span><span style="color:#C3E88D;"> apply</span><span style="color:#C3E88D;"> -f</span><span style="color:#C3E88D;"> -</span></span>
<span class="line"><span style="color:#C3E88D;">apiVersion: &quot;cilium.io/v2alpha1&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">kind: CiliumLoadBalancerIPPool</span></span>
<span class="line"><span style="color:#C3E88D;">metadata:</span></span>
<span class="line"><span style="color:#C3E88D;">  name: &quot;pool&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">spec:</span></span>
<span class="line"><span style="color:#C3E88D;">  blocks:</span></span>
<span class="line"><span style="color:#C3E88D;">  - start: &quot;10.0.10.1&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">    stop: &quot;10.0.10.100&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">EOF</span></span></code></pre></div><details><summary>Without cilium</summary><p>In Kind there is a way use kind provider <a href="https://github.com/kubernetes-sigs/cloud-provider-kind" target="_blank" rel="noreferrer">https://github.com/kubernetes-sigs/cloud-provider-kind</a></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> run</span><span style="color:#C3E88D;"> -d</span><span style="color:#C3E88D;"> --network</span><span style="color:#C3E88D;"> kind</span><span style="color:#C3E88D;"> -v</span><span style="color:#C3E88D;"> /var/run/docker.sock:/var/run/docker.sock</span><span style="color:#C3E88D;"> registry.k8s.io/cloud-provider-kind/cloud-controller-manager:v0.4.0</span></span></code></pre></div></details><h2 id="kind-container-is-a-node" tabindex="-1">Kind Container is a NODE <a class="header-anchor" href="#kind-container-is-a-node" aria-label="Permalink to &quot;Kind Container is a NODE&quot;">â€‹</a></h2><p>Get in the kind container to reach the nodes.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># docker ps</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> exec</span><span style="color:#C3E88D;"> -it</span><span style="color:#C3E88D;"> kind-control-plane</span><span style="color:#C3E88D;"> bash</span></span></code></pre></div>`,55)]))}const F=a(o,[["render",p]]);export{u as __pageData,F as default};
