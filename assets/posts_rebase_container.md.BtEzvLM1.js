import{_ as s,c as a,o as e,a3 as n}from"./chunks/framework.BEbjkBe4.js";const D=JSON.parse('{"title":"Rebase Container","description":"","frontmatter":{},"headers":[],"relativePath":"posts/rebase_container.md","filePath":"posts/rebase_container.md","lastUpdated":1709888196000}'),o={name:"posts/rebase_container.md"},l=n(`<h1 id="rebase-container" tabindex="-1">Rebase Container <a class="header-anchor" href="#rebase-container" aria-label="Permalink to &quot;Rebase Container&quot;">​</a></h1><p>Crane tool has rebase command to rebase a container image to a new base image.<br> This is useful when the base image is updated and you want to update the container image to use the new base image.</p><p><a href="https://github.com/google/go-containerregistry/tree/main/cmd/crane" target="_blank" rel="noreferrer">https://github.com/google/go-containerregistry/tree/main/cmd/crane</a></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">VERSION</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">v0.19.0</span></span>
<span class="line"><span style="color:#EEFFFF;">OS</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">Linux</span></span>
<span class="line"><span style="color:#EEFFFF;">ARCH</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">x86_64</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#C3E88D;"> -fSL</span><span style="color:#C3E88D;"> https://github.com/google/go-containerregistry/releases/download/</span><span style="color:#89DDFF;">\${</span><span style="color:#EEFFFF;">VERSION</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/go-containerregistry_</span><span style="color:#89DDFF;">\${</span><span style="color:#EEFFFF;">OS</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">\${</span><span style="color:#EEFFFF;">ARCH</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">.tar.gz</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> tar</span><span style="color:#C3E88D;"> -oxz</span><span style="color:#C3E88D;"> -C</span><span style="color:#C3E88D;"> ~/bin/</span><span style="color:#C3E88D;"> crane</span></span></code></pre></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>Old dockerfile</p><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#EEFFFF;"> alpine:3.18.6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#EEFFFF;"> test test</span></span></code></pre></div><p>First build the container image</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> build</span><span style="color:#C3E88D;"> -t</span><span style="color:#C3E88D;"> rytsh/test:3.18.6</span><span style="color:#C3E88D;"> .</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> push</span><span style="color:#C3E88D;"> rytsh/test:3.18.6</span></span></code></pre></div><p>Rebase the container image to use <code>alpine:3.19.1</code> as the base image</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;"># first login with crane</span></span>
<span class="line"><span style="color:#FFCB6B;">crane</span><span style="color:#C3E88D;"> auth</span><span style="color:#C3E88D;"> login</span><span style="color:#C3E88D;"> docker.io</span><span style="color:#C3E88D;"> -u</span><span style="color:#C3E88D;"> rytsh</span><span style="color:#C3E88D;"> -p</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#C3E88D;">passwor</span><span style="color:#EEFFFF;">d</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">crane</span><span style="color:#C3E88D;"> rebase</span><span style="color:#C3E88D;"> --old_base</span><span style="color:#C3E88D;"> alpine:3.18.6</span><span style="color:#C3E88D;"> --new_base</span><span style="color:#C3E88D;"> alpine:3.19.1</span><span style="color:#C3E88D;"> -t</span><span style="color:#C3E88D;"> rytsh/test:3.19.1</span><span style="color:#C3E88D;"> rytsh/test:3.18.6</span></span></code></pre></div>`,11),t=[l];function p(r,c,i,y,F,d){return e(),a("div",null,t)}const E=s(o,[["render",p]]);export{D as __pageData,E as default};
