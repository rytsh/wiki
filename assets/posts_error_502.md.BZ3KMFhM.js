import{_ as o,c as t,a2 as s,o as a}from"./chunks/framework.BQmytedh.js";const h=JSON.parse('{"title":"502 error code","description":"","frontmatter":{},"headers":[],"relativePath":"posts/error_502.md","filePath":"posts/error_502.md","lastUpdated":1733513171000}'),r={name:"posts/error_502.md"};function n(l,e,p,c,i,d){return a(),t("div",null,e[0]||(e[0]=[s(`<h1 id="_502-error-code" tabindex="-1">502 error code <a class="header-anchor" href="#_502-error-code" aria-label="Permalink to &quot;502 error code&quot;">â€‹</a></h1><blockquote><p>TL;DR: If server directly closes the connection, client will get nothing <code>EOF</code> error.<br> Than proxies convert it to <code>502 Bad Gateway</code> error and mostly related with server side code.</p></blockquote><blockquote><p>There is good article about it <a href="https://blog.cloudflare.com/the-complete-guide-to-golang-net-http-timeouts/" target="_blank" rel="noreferrer">https://blog.cloudflare.com/the-complete-guide-to-golang-net-http-timeouts/</a></p></blockquote><p>In http server there is settings read and write timeouts.<br> Write timeout is between you get the request body and reponse.</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-theme vp-code" tabindex="0"><code><span class="line"><span style="color:#546E7A;font-style:italic;">// not recommended in production codes</span></span>
<span class="line"><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Server</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#EEFFFF;">    ReadTimeout</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">  10</span><span style="color:#89DDFF;"> *</span><span style="color:#EEFFFF;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">Second</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#EEFFFF;">    WriteTimeout</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 10</span><span style="color:#89DDFF;"> *</span><span style="color:#EEFFFF;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">Second</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>When we add timeout in the http-server code than it is working worse than without timeout.<br> If our request takes 30 seconds than, we will wait 30 seconds and after that we will get <code>EOF</code> error.</p><p>Best of do this kind of things outside of the microservice.</p>`,7)]))}const u=o(r,[["render",n]]);export{h as __pageData,u as default};
