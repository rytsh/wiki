import{_ as s,o as a,c as n,R as l}from"./chunks/framework.07BXFssY.js";const u=JSON.parse('{"title":"Load Balancers","description":"","frontmatter":{},"headers":[],"relativePath":"tools/server/load_balancer.md","filePath":"tools/server/load_balancer.md","lastUpdated":1701909486000}'),o={name:"tools/server/load_balancer.md"},p=l(`<h1 id="load-balancers" tabindex="-1">Load Balancers <a class="header-anchor" href="#load-balancers" aria-label="Permalink to &quot;Load Balancers&quot;">​</a></h1><h2 id="haproxy" tabindex="-1">HAPROXY <a class="header-anchor" href="#haproxy" aria-label="Permalink to &quot;HAPROXY&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">apk</span><span style="color:#E6DB74;"> add</span><span style="color:#E6DB74;"> haproxy</span></span></code></pre></div><p>Add config to the <code>/etc/haproxy/haproxy.cfg</code> file.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">mv</span><span style="color:#E6DB74;"> /etc/haproxy/haproxy.cfg</span><span style="color:#E6DB74;"> /etc/haproxy/haproxy.cfg.bak</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">defaults</span></span>
<span class="line"><span style="color:#A6E22E;">  maxconn</span><span style="color:#AE81FF;"> 4000</span></span>
<span class="line"><span style="color:#A6E22E;">  mode</span><span style="color:#E6DB74;"> http</span></span>
<span class="line"><span style="color:#A6E22E;">  log</span><span style="color:#E6DB74;"> /dev/log</span><span style="color:#E6DB74;"> local0</span></span>
<span class="line"><span style="color:#A6E22E;">  option</span><span style="color:#E6DB74;"> dontlognull</span></span>
<span class="line"><span style="color:#A6E22E;">  timeout</span><span style="color:#E6DB74;"> http-request</span><span style="color:#AE81FF;"> 5</span><span style="color:#E6DB74;">s</span></span>
<span class="line"><span style="color:#A6E22E;">  timeout</span><span style="color:#E6DB74;"> connect</span><span style="color:#AE81FF;"> 5000</span></span>
<span class="line"><span style="color:#A6E22E;">  timeout</span><span style="color:#E6DB74;"> client</span><span style="color:#AE81FF;"> 2000000</span><span style="color:#88846F;"> # ddos protection</span></span>
<span class="line"><span style="color:#A6E22E;">  timeout</span><span style="color:#E6DB74;"> server</span><span style="color:#AE81FF;"> 2000000</span><span style="color:#88846F;"> # stick-table type ip size 100k expire 30s store conn_cur</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">frontend</span><span style="color:#E6DB74;"> kubernetes</span></span>
<span class="line"><span style="color:#A6E22E;">    bind</span><span style="color:#FD971F;"> *</span><span style="color:#E6DB74;">:6443</span></span>
<span class="line"><span style="color:#A6E22E;">    mode</span><span style="color:#E6DB74;"> tcp</span></span>
<span class="line"><span style="color:#A6E22E;">    option</span><span style="color:#E6DB74;"> tcplog</span></span>
<span class="line"><span style="color:#A6E22E;">    default_backend</span><span style="color:#E6DB74;"> kubernetes-cluster</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">backend</span><span style="color:#E6DB74;"> kubernetes-cluster</span></span>
<span class="line"><span style="color:#A6E22E;">    option</span><span style="color:#E6DB74;"> httpchk</span><span style="color:#E6DB74;"> GET</span><span style="color:#E6DB74;"> /healthz</span></span>
<span class="line"><span style="color:#A6E22E;">    http-check</span><span style="color:#E6DB74;"> expect</span><span style="color:#E6DB74;"> status</span><span style="color:#AE81FF;"> 200</span></span>
<span class="line"><span style="color:#A6E22E;">    mode</span><span style="color:#E6DB74;"> tcp</span></span>
<span class="line"><span style="color:#A6E22E;">    option</span><span style="color:#E6DB74;"> ssl-hello-chk</span></span>
<span class="line"><span style="color:#A6E22E;">    balance</span><span style="color:#E6DB74;"> roundrobin</span></span>
<span class="line"><span style="color:#A6E22E;">        server</span><span style="color:#E6DB74;"> master1</span><span style="color:#E6DB74;"> master1.cluster.kube-cluster:6443</span><span style="color:#E6DB74;"> check</span></span>
<span class="line"><span style="color:#A6E22E;">        server</span><span style="color:#E6DB74;"> master2</span><span style="color:#E6DB74;"> master2.cluster.kube-cluster:6443</span><span style="color:#E6DB74;"> check</span></span>
<span class="line"><span style="color:#A6E22E;">        server</span><span style="color:#E6DB74;"> master3</span><span style="color:#E6DB74;"> master3.cluster.kube-cluster:6443</span><span style="color:#E6DB74;"> check</span></span></code></pre></div><p>Enable and start the service.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">rc-update</span><span style="color:#E6DB74;"> add</span><span style="color:#E6DB74;"> haproxy</span><span style="color:#E6DB74;"> default</span></span>
<span class="line"><span style="color:#A6E22E;">rc-service</span><span style="color:#E6DB74;"> haproxy</span><span style="color:#E6DB74;"> start</span></span></code></pre></div><p>Check the connection</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">curl</span><span style="color:#AE81FF;"> -k</span><span style="color:#E6DB74;"> https://cluster.kube-cluster:6443/healthz</span></span></code></pre></div>`,10),e=[p];function c(t,r,E,i,y,d){return a(),n("div",null,e)}const B=s(o,[["render",c]]);export{u as __pageData,B as default};
